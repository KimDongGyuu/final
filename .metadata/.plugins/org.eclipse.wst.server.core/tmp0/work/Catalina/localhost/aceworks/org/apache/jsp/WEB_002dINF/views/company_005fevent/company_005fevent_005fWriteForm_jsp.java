/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2024-03-20 12:03:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.company_005fevent;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class company_005fevent_005fWriteForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/include/style.jsp", Long.valueOf(1710401481870L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link\r\n");
      out.write("   href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("   rel=\"stylesheet\"\r\n");
      out.write("   integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n");
      out.write("   crossorigin=\"anonymous\">\r\n");
      out.write("<script\r\n");
      out.write("   src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("   integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\"\r\n");
      out.write("   crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("   src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\"\r\n");
      out.write("   integrity=\"sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r\"\r\n");
      out.write("   crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("   src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js\"\r\n");
      out.write("   integrity=\"sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy\"\r\n");
      out.write("   crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("#left {\r\n");
      out.write("	width: 200px;\r\n");
      out.write("	height: 600px;\r\n");
      out.write("	float: left;\r\n");
      out.write("	border-right: 2px solid darkblue;\r\n");
      out.write("	margin-left: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#right {\r\n");
      out.write("	width: 900px;\r\n");
      out.write("	height: 600px;\r\n");
      out.write("	margin-left: 260px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#bt {\r\n");
      out.write("	width: 180px;\r\n");
      out.write("	height: 40px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\" integrity=\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-lite.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-lite.min.js\"></script>\r\n");
      out.write("	<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("    //본 예제에서는 도로명 주소 표기 방식에 대한 법령에 따라, 내려오는 데이터를 조합하여 올바른 주소를 구성하는 방법을 설명합니다.\r\n");
      out.write("    function sample4_execDaumPostcode() {\r\n");
      out.write("        new daum.Postcode({\r\n");
      out.write("            oncomplete: function(data) {\r\n");
      out.write("                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\r\n");
      out.write("                // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.\r\n");
      out.write("                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("                var roadAddr = data.roadAddress; // 도로명 주소 변수\r\n");
      out.write("                var extraRoadAddr = ''; // 참고 항목 변수\r\n");
      out.write("\r\n");
      out.write("                // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("                // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("                    extraRoadAddr += data.bname;\r\n");
      out.write("                }\r\n");
      out.write("                // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("                if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("                   extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("                }\r\n");
      out.write("                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("                if(extraRoadAddr !== ''){\r\n");
      out.write("                    extraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("                //document.getElementById('sample4_postcode1').value = data.zonecode;\r\n");
      out.write("                document.getElementById(\"sample4_roadAddress\").value = roadAddr;\r\n");
      out.write("               // document.getElementById(\"sample4_jibunAddress\").value = data.jibunAddress;\r\n");
      out.write("                \r\n");
      out.write("                // 참고항목 문자열이 있을 경우 해당 필드에 넣는다.\r\n");
      out.write("                if(roadAddr !== ''){\r\n");
      out.write("                    document.getElementById(\"sample4_extraAddress\").value = extraRoadAddr;\r\n");
      out.write("                } else {\r\n");
      out.write("                    document.getElementById(\"sample4_extraAddress\").value = '';\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                var guideTextBox = document.getElementById(\"guide\");\r\n");
      out.write("                // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.\r\n");
      out.write("                if(data.autoRoadAddress) {\r\n");
      out.write("                    var expRoadAddr = data.autoRoadAddress + extraRoadAddr;\r\n");
      out.write("                    guideTextBox.innerHTML = '(예상 도로명 주소 : ' + expRoadAddr + ')';\r\n");
      out.write("                    guideTextBox.style.display = 'block';\r\n");
      out.write("\r\n");
      out.write("                } else {\r\n");
      out.write("                    guideTextBox.innerHTML = '';\r\n");
      out.write("                    guideTextBox.style.display = 'none';\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }).open();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("function sb(event) {\r\n");
      out.write("	// addr1 = document.getElementById('sample4_postcode').value;\r\n");
      out.write("	var addr2 = document.getElementById('sample4_roadAddress').value;\r\n");
      out.write("	//var addr3 = document.getElementById('sample4_jibunAddress').value;\r\n");
      out.write("	var addr4 = document.getElementById('sample4_detailAddress').value;\r\n");
      out.write("	var addr5 = document.getElementById('sample4_extraAddress').value;\r\n");
      out.write("	//var fullAddr = addr2 + '/' + addr3 + '/' + addr4 + '/' + addr5;\r\n");
      out.write("	var fullAddr = addr2 + '/'+ addr4 + '/' + addr5;\r\n");
      out.write("	document.getElementById('event_addr').value = fullAddr;\r\n");
      out.write("	document.getElementById('event_addr').submit();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div>\r\n");
      out.write("		<div id=\"left\">\r\n");
      out.write("			<button id=\"bt\" type=\"button\" class=\"btn btn-outline-primary\"\r\n");
      out.write("				onclick=\"location.href='company_event_List.do?com_idx=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getCom_idx()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\">목록</button>\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"mt-3\"><a href=\"company_news_List.do?com_idx=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getCom_idx()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">회사소식</a> <br> <a href=\"company_event_List.do?com_idx=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getCom_idx()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">경조사</a></div>\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<form name=\"company_eventWrite\" action=\"company_eventWrite.do\" method=\"post\" onsubmit=\"sb()\">\r\n");
      out.write("		\r\n");
      out.write("		<input type=\"hidden\" name=\"com_idx\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getCom_idx()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("		<input type=\"hidden\" id=\"event_addr\" name=\"event_addr\">\r\n");
      out.write("		\r\n");
      out.write("		<div id=\"right\"> \r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"mt-5 mb-2\"><span class=\"h4\">경조사 &gt;&gt; 게시글 작성</span></div>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"mb-2 d-flex gap-2\">\r\n");
      out.write("		<input type=\"text\" name=\"event_title\" class=\"form-control\" placeholder=\"제목\" autocomplete=\"off\" id=\"event_title\">\r\n");
      out.write("		<input type=\"text\" name=\"event_writer\" class=\"form-control\" placeholder=\"작성자\" id=\"event_writer\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getName()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("		<div class=\"mb-2 d-flex gap-2\">\r\n");
      out.write("		<input type=\"button\" class=\"btn btn-outline-primary\" onclick=\"sample4_execDaumPostcode()\" value=\"주소검색\">\r\n");
      out.write("		<input type=\"text\" class=\"form-control\" id=\"sample4_roadAddress\" name=\"addr2\" placeholder=\"도로명주소\">\r\n");
      out.write("		\r\n");
      out.write("		<span id=\"guide\" style=\"color:#999;display:none\"></span>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"mb-2 d-flex gap-2\">\r\n");
      out.write("		<input type=\"text\" class=\"form-control\" id=\"sample4_detailAddress\" name=\"add4\" placeholder=\"상세주소\">\r\n");
      out.write("		<input type=\"text\" class=\"form-control\" id=\"sample4_extraAddress\" name=\"addr5\" placeholder=\"참고항목\">\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		 <div>\r\n");
      out.write("		 	<textarea id=\"summernote\" name=\"event_content\"></textarea>\r\n");
      out.write("		 </div>	\r\n");
      out.write("		 \r\n");
      out.write("		 <div class=\"mt-2 d-flex gap-2 justify-content-center\">\r\n");
      out.write("		<button class=\"btn btn-primary\" id=\"submit\">저장</button>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		</div>\r\n");
      out.write("  <script>\r\n");
      out.write("      $('#summernote').summernote({\r\n");
      out.write("        placeholder: '내용을 입력해 주세요.',\r\n");
      out.write("        tabsize: 2,\r\n");
      out.write("        height: 300,\r\n");
      out.write("        width :875,\r\n");
      out.write("        \r\n");
      out.write("        toolbar: [\r\n");
      out.write("          ['style', ['style']],\r\n");
      out.write("          ['font', ['bold', 'underline', 'clear']],\r\n");
      out.write("          ['color', ['color']],\r\n");
      out.write("          ['para', ['ul', 'ol', 'paragraph']],\r\n");
      out.write("          ['table', ['table']],      \r\n");
      out.write("          ['view', ['codeview', 'help']]\r\n");
      out.write("        ]\r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("      $('textarea[name=\"news_content\"]').html($('.summernote').code());\r\n");
      out.write("    </script> \r\n");
      out.write("		</div>\r\n");
      out.write("</form>\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
